NOP
MOVA    | const:12 |        -- acc := const
MOVAR   | ra:6 |            -- acc := ra
MOVRA   | ra:6 |            -- ra := acc
MOVR    | const:6 | rb:6 |  -- rb := const
MOVRR   | ra:6 | rb:6 |     -- ra := rb
LDA     | const:12 |        -- acc := *const
STA     | const:12 |        -- *const := acc
LDAR    | -:6 | rb:6 |      -- acc := *rb
STAR    | -:6 | rb:6 |      -- *rb := acc
LDRR    | ra:6 | rb:6 |     -- rb := *ra
ADDA    | const:12 |        -- acc := acc + const
SUBA    | const:12 |        -- acc := acc - const
ADDAR   | -:6 | rb:6 |      -- acc := acc + rb
SUBAR   | -:6 | rb:6 |      -- acc := acc - rb
ADDR    | const:6 | rb:6 |  -- rb := rb + const
SUBR    | const:6 | rb:6 |  -- rb := rb - const
MAC     | ra:6 | rb:6 |     -- acc := acc + ra * rb
MACP    | ra:6 | rb:6 |     -- acc := p + ra * rb
MACPM   | ra:6 | rb:6 |     -- acc := p + *rb * ra
COEFA   | const:12 |        -- coefa := const
DATAA   | const:12 |        -- dataa := const
DATAO   | const:12 |        -- datao := const
DATAM   | const:12 |        -- datam := const
CMAC    | -:12 |            -- acc := p + (*coef++) * (*data++)
CSTR    | ra:6 | -:6 |      -- datao := (datao - 1) mod datam; *(dataa + datao) := ra
J       | const:12 |        -- pc := const
BR      | -:6 | rb:6 |      -- pc := rb
BZ      | ra:6 | rb:6 |     -- if rb = 0: pc := ra
BNZ     | ra:6 | rb:6 |     -- if rb != 0: pc := ra
BNZD    | ra:6 | rb:6 |     -- if rb != 0: pc := ra; rb -= 1
