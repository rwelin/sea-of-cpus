-- Template generated by mktest from ${filename}
library ieee;
use ieee.std_logic_1164.all;
use work.${entity_name};
use work.core_config.all;
use work.test.all;

entity ${entity_name}Test is
end entity ${entity_name}Test;

architecture behav of ${entity_name}Test is
    ${signals}

    type TestData is
        record
            ${record_fields}
            wait_cycles: integer;
        end record;

    type TestDataArray is array (0 to 0) of TestData;
    constant test_data: TestDataArray := (
        -- Insert test data here
    );

begin

    clk_gen: process
    begin
        clk <= '1';
        wait for 50 ns;
        clk <= '0';
        wait for 50 ns;
    end process clk_gen;

    ${entity_name}_inst: entity ${entity_name}
    port map (
        ${port_map}
    );

    ${entity_name}_test: process
    begin
        wait until clk'event and clk = '1';

        for i in test_data'range loop

            ${input_assignments}

            wait_for(test_data(i).wait_cycles, clk);

            ${output_asserts}

        end loop;

        report "DONE" severity failure;
    end process ${entity_name}_test;

end architecture behav;
